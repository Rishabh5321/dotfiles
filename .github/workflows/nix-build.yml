name: Build NixOS configs and push to Cachix

on:
  push:
    branches: [ main ]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Maximize build disk space
        uses: easimon/maximize-build-space@v10
        with:
          root-reserve-mb: 512
          swap-size-mb: 4096
          remove-dotnet: 'true'
          remove-android: 'true'
          remove-haskell: 'true'

      - uses: actions/checkout@v4

      - name: Setup Nix with store optimization
        uses: cachix/install-nix-action@v31
        with:
          extra_nix_config: |
            auto-optimise-store = true
            experimental-features = nix-command flakes
            download-buffer-size = 500000000
            cores = 0
            max-jobs = auto
            # Critical: Use the created LVM volume for Nix store
            store = /home/runner/work/dotfiles/dotfiles/nix-store

      - name: Create and mount Nix store on LVM volume
        run: |
          sudo mkdir -p /home/runner/work/dotfiles/dotfiles/nix-store
          sudo chown -R runner:runner /home/runner/work/dotfiles/dotfiles/nix-store
          sudo mkdir -p /nix
          sudo mount --bind /home/runner/work/dotfiles/dotfiles/nix-store /nix

      - uses: cachix/cachix-action@v12
        with:
          name: rishabh5321
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

      - name: Build with optimized settings
        run: |
          export NIX_BUILD_CORES=0
          nix build .#nixosConfigurations.redmi.config.system.build.toplevel \
            --option keep-going true \
            --option sandbox false \
            --max-jobs auto

      - name: Cleanup
        if: always()
        run: |
          sudo umount /nix || true
          nix-collect-garbage -d
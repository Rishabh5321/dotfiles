name: update-flakes
on:
  schedule:
    - cron: "0 * * * *"
  workflow_dispatch:

permissions: {}

jobs:
  get-flake-inputs:
    runs-on: ubuntu-latest
    outputs:
      flake-inputs: ${{ steps.get-flake-inputs.outputs.flake-inputs }}
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: false
          sparse-checkout: flake.lock
      - id: get-flake-inputs
        run: |
          # Extract flake inputs from flake.lock
          flake_inputs="$(jq -c '.nodes.root.inputs | {flake: keys}' flake.lock)"

          # Output the flake inputs for the matrix job
          echo "flake-inputs=${flake_inputs}" >> "$GITHUB_OUTPUT"

  update-flake:
    name: update-${{ matrix.flake }}
    runs-on: ubuntu-latest
    needs: get-flake-inputs
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.get-flake-inputs.outputs.flake-inputs) }}
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: false
      - uses: DeterminateSystems/nix-installer-action@v17
        with:
          source-branch: main
          extra-conf: accept-flake-config = true
      - run: git config --global user.email "noreply@github.com"
      - run: git config --global user.name "github[bot]"
      # Use flake-update-action and give it an ID to reference its outputs
      - id: update_action # Added ID here
        uses: cpcloud/flake-update-action@v2.0.1
        with:
          dependency: ${{ matrix.flake }}
          pull-request-token: ${{ secrets.REPO_ACCESS_TOKEN }}
          pull-request-author: github[bot] <noreply@github.com>
          pull-request-labels: "dependencies, automated"
          delete-branch: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          pull-request-branch-prefix: update-
          automerge: true
      # Send Telegram message only if a pull request was created
      - run: |
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage \
          -d chat_id=${{ secrets.CHAT_ID }} \
          -d text="Flake ${{ matrix.flake }} has been updated and a pull request (#${{ steps.update_action.outputs.pull-request-number }}) has been created."
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          CHAT_ID: ${{ secrets.CHAT_ID }}
        # Add an if condition to check if pull-request-number output exists
        if: steps.update_action.outputs.pull-request-number # Added condition here

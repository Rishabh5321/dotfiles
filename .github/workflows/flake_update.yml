name: update-flakes
on:
  schedule:
    - cron: '0 */12 * * *'
  workflow_dispatch:

permissions: {}

jobs:
  get-flake-inputs:
    runs-on: ubuntu-latest
    outputs:
      flake-inputs: ${{ steps.get-flake-inputs.outputs.flake-inputs }}
    steps:
      - name: Checkout flake.lock
        uses: actions/checkout@v4
        with:
          lfs: false
          sparse-checkout: flake.lock
      - name: Extract flake inputs
        id: get-flake-inputs
        run: |
          flake_inputs=$(jq -c '.nodes.root.inputs | {flake: keys}' flake.lock)
          echo "flake-inputs=${flake_inputs}" >> "$GITHUB_OUTPUT"

  update-flake:
    name: Update flake
    runs-on: ubuntu-latest
    needs: get-flake-inputs
    strategy:
      fail-fast: false
      matrix:
        flake: ${{ fromJson(needs.get-flake-inputs.outputs.flake-inputs).flake }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: false
      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@v16
        with:
          nix-installer-branch: main
          extra-conf: accept-flake-config = true
      - name: Configure Git
        run: |
          git config --global user.email "noreply@github.com"
          git config --global user.name "github[bot]"
      - name: Update flake input
        uses: cpcloud/flake-update-action@v2.0.1
        with:
          dependency: ${{ matrix.flake }}
          pull-request-token: ${{ secrets.REPO_ACCESS_TOKEN }}
          pull-request-author: github[bot] <noreply@github.com>
          delete-branch: true
          github-token: ${{ secrets.GITHUB_TOKEN }}
          pull-request-branch-prefix: update-
          automerge: true
      - name: Send Telegram notification
        run: |
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage" \
          -d chat_id="${{ secrets.TELEGRAM_CHAT_ID }}" \
          -d text="Flake ${{ matrix.flake }} has been updated and a pull request has been created."

name: "Build ISO"

env:
  EXTRA_NIX_CONFIG: |
    auto-optimise-store = true
    experimental-features = nix-command flakes
    max-jobs = auto
    download-buffer-size = 500000000
    substituters = https://rishabh5321.cachix.org https://cache.nixos.org https://hyprland.cachix.org https://nixpkgs-wayland.cachix.org https://nix-gaming.cachix.org https://chaotic-nyx.cachix.org
    trusted-public-keys = rishabh5321.cachix.org-1:mxfBIH2XElE6ieFXXYBA9Ame4mVTbAf1TGR843siggk= cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= hyprland.cachix.org-1:a7pgxzMz7+chwVL3/pzj6jIBMioiJM7ypFP8PwtkuGc= nixpkgs-wayland.cachix.org-1:3lwxaILxMRkVhehr5StQprHdEo4IrE8sRho9R9HOLYA= nix-gaming.cachix.org-1:nbjlureqMbRAxR1gJ/f3hxemL9svXaZF/Ees8vCUUs4= chaotic-nyx.cachix.org-1:HfnXSw4pj95iI/n17rIDy40agHj12WfF+Gqk6SonIT8=

permissions:
  contents: write
  pull-requests: write

on:
  schedule:
    - cron: "0 2 * * *"
  # push:
  #   branches:
  #     - main
  # pull_request:
  #   paths:
  #     - "hosts/iso/**"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v5

      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable
          extra_nix_config: ${{ env.EXTRA_NIX_CONFIG }}

      - name: "Build ISO"
        run: nix build .#nixosConfigurations.iso.config.system.build.isoImage

      - name: "Upload ISO artifact"
        uses: actions/upload-artifact@v5
        with:
          name: nixos-iso
          path: result/iso/nixos-*.iso

      - name: Get Date
        id: get-date
        run: |
          echo "date=$(TZ='Asia/Kolkata' date +"%Y.%m.%d-%H.%M.%S")" >> $GITHUB_OUTPUT

      - name: Upload Build Artifact
        uses: ncipollo/release-action@main
        with:
          artifacts: "result/iso/nixos-*.iso"
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: Build-${{ steps.get-date.outputs.date }}
          artifactErrorsFailBuild: true

      - name: Delete releases and workflows runs
        uses: ophub/delete-releases-workflows@main
        with:
          delete_releases: true
          releases_keep_latest: 3
          delete_workflows: false
          delete_tags: true
          gh_token: ${{ secrets.GITHUB_TOKEN }}

name: Flake_build
on:
    push:
    pull_request:
    workflow_dispatch:
jobs:
  build-configurations:
    name: Build NixOS Configurations
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          install_url: https://nixos.org/nix/install
          extra_nix_config: |
            auto-optimise-store = true
            experimental-features = nix-command flakes
            download-buffer-size = 500000000
      - name: Setup Cachix
        uses: cachix/cachix-action@v16
        with:
          name: buildcache
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
          pushFilter: ".*"
      - name: Check Dell Configuration
        id: build_dell
        run: |
          set -o pipefail
          if nix build .#nixosConfigurations.dell.config.system.build.toplevel --dry-run 2>&1 | tee build_dell.log; then
            echo "DELL_STATUS=passed" >> $GITHUB_ENV
            echo "Dell configuration check completed successfully" > build_dell_filtered.log
          else
            echo "DELL_STATUS=failed" >> $GITHUB_ENV
            grep -E "(warning:|error:)" build_dell.log > build_dell_filtered.log || cat build_dell.log > build_dell_filtered.log
          fi
      - name: Check Redmi Configuration
        id: build_redmi
        if: always()
        run: |
          set -o pipefail
          if nix build .#nixosConfigurations.redmi.config.system.build.toplevel --dry-run 2>&1 | tee build_redmi.log; then
            echo "REDMI_STATUS=passed" >> $GITHUB_ENV
            echo "Redmi configuration check completed successfully" > build_redmi_filtered.log
          else
            echo "REDMI_STATUS=failed" >> $GITHUB_ENV
            grep -E "(warning:|error:)" build_redmi.log > build_redmi_filtered.log || cat build_redmi.log > build_redmi_filtered.log
          fi
      - name: Send Telegram Notification
        if: always()
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          CHAT_ID: ${{ secrets.CHAT_ID }}
        run: |
          BRANCH_NAME="${{ github.ref_name }}"
          REPO_NAME="${{ github.repository }}"
          DELL_STATUS="${{ env.DELL_STATUS }}"
          REDMI_STATUS="${{ env.REDMI_STATUS }}"
          
          if [[ "$DELL_STATUS" == "passed" && "$REDMI_STATUS" == "passed" ]]; then
            STATUS_MESSAGE="✅ NixOS configurations for $REPO_NAME passed on branch $BRANCH_NAME."
          else
            STATUS_MESSAGE="❌ NixOS configurations for $REPO_NAME failed on branch $BRANCH_NAME.%0ACheck GitHub Actions for details."
          fi
          
          MESSAGE="Dell Config: $DELL_STATUS%0ARedmi Config: $REDMI_STATUS%0A%0A"
          
          if [ -s build_dell_filtered.log ] && [ "$DELL_STATUS" == "failed" ]; then
            DELL_ERRORS=$(awk '{print NR". "$0}' build_dell_filtered.log | head -10 | perl -pe 's/\n/%0A/g')
            MESSAGE+="Dell Issues:%0A\`\`\`%0A$DELL_ERRORS%0A\`\`\`%0A%0A"
          fi
          
          if [ -s build_redmi_filtered.log ] && [ "$REDMI_STATUS" == "failed" ]; then
            REDMI_ERRORS=$(awk '{print NR". "$0}' build_redmi_filtered.log | head -10 | perl -pe 's/\n/%0A/g')
            MESSAGE+="Redmi Issues:%0A\`\`\`%0A$REDMI_ERRORS%0A\`\`\`"
          fi
          
          curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_TOKEN/sendMessage" \
            -d "chat_id=$CHAT_ID" \
            -d "text=$STATUS_MESSAGE%0A%0A$MESSAGE%0A%0AGenerated on $(TZ='Asia/Kolkata' date)" \
            -d "parse_mode=Markdown"
name: Lint, Format and Clean Nix Code

on:
  workflow_dispatch:
  push:
    branches:
      - "main"
    tags-ignore:
      - "update"

jobs:
  lint-format-clean:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate App Token
        id: generate_token
        uses: peter-murray/workflow-application-token-action@v4
        with:
          application_id: ${{ secrets.APP_ID }}
          application_private_key: ${{ secrets.APP_PRIVATE_KEY }}

      - name: Configure Git for FlakeBuilderApp
        run: |
          git config --global user.email "flakebuilderapp[bot]@users.noreply.github.com"
          git config --global user.name "flakebuilderapp[bot]"
          echo "Git user configured: $(git config --global user.name) <$(git config --global user.email)>"

      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Install Nix Tools
        run: |
          nix profile install nixpkgs#deadnix nixpkgs#statix nixpkgs#nixpkgs-fmt
        env:
          NIX_PATH: nixpkgs=channel:nixos-unstable

      - name: Run deadnix
        run: deadnix --edit .

      - name: Run Statix Lint
        run: statix fix .

      - name: Run Nix Format
        run: nixpkgs-fmt .

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          commit-message: "chore: auto format, lint and clean nix code"
          title: "Auto Lint, Format and Clean"
          body: "This is an auto-generated PR with linting, formatting and code cleaning changes."
          branch: auto-lint-format-clean
          delete-branch: true
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          labels: automated chore

      - name: Set the PR to automerge
        if: ${{ steps.create_pr.outputs.pull-request-operation == 'created' }}
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: ${{ steps.generate_token.outputs.token }}
          pull-request-number: ${{ steps.create_pr.outputs.pull-request-number }}
          merge-method: "squash"

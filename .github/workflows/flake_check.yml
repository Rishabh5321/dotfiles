name: flake-check
on:
  push:
  pull_request:
  workflow_dispatch:
jobs:
  flake-checks:
    name: Flake Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Install Nix
        uses: cachix/install-nix-action@v31
        with:
          install_url: https://nixos.org/nix/install
          extra_nix_config: |
            auto-optimise-store = true
            experimental-features = nix-command flakes
            download-buffer-size = 500000000
      - name: Run Flake Check
        id: flake_check
        run: |
          nix profile install nixpkgs#nix-output-monitor
          nix flake check |& nom 2>&1 | tee flake_check.log
          if grep -E "(warning:|error:)" flake_check.log > flake_check_filtered.log; then
            echo "has_issues=true" >> $GITHUB_OUTPUT
            echo "FLAKE_STATUS=failed" >> $GITHUB_ENV
            exit 1
          else
            echo "No warnings or errors." > flake_check_filtered.log
            echo "has_issues=false" >> $GITHUB_OUTPUT
            echo "FLAKE_STATUS=passed" >> $GITHUB_ENV
          fi
      - name: Send Telegram Notification
        if: always()
        env:
          TELEGRAM_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          CHAT_ID: ${{ secrets.CHAT_ID }}
        run: |
          BRANCH_NAME="${{ github.ref_name }}"
          REPO_NAME="${{ github.repository }}"
          FLAKE_STATUS="${{ env.FLAKE_STATUS }}"
          
          if [[ "$FLAKE_STATUS" == "passed" ]]; then
            STATUS_MESSAGE="✅ Flake check for $REPO_NAME passed on branch $BRANCH_NAME."
          else
            STATUS_MESSAGE="❌ Flake check for $REPO_NAME failed on branch $BRANCH_NAME.%0ACheck GitHub Actions for details."
          fi
          
          MESSAGE="Flake Check: $FLAKE_STATUS%0A%0A"
          
          if [ -s flake_check_filtered.log ]; then
            FLAKE_WARNINGS=$(awk '{print NR". "$0}' flake_check_filtered.log | head -10 | perl -pe 's/\n/%0A/g')
            MESSAGE+="Issues:%0A\`\`\`%0A$FLAKE_WARNINGS%0A\`\`\`%0A%0A"
          fi
          
          curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_TOKEN/sendMessage" \
            -d "chat_id=$CHAT_ID" \
            -d "text=$STATUS_MESSAGE%0A%0A$MESSAGE%0A%0AGenerated on $(TZ='Asia/Kolkata' date)" \
            -d "parse_mode=Markdown"
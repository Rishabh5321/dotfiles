name: Build and Push Minimal Configs to Cachix

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  CACHIX_NAME: "prebuild-pkgs"
  SYSTEM: "x86_64-linux"

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Nix (with Cachix support)
        uses: DeterminateSystems/nix-installer-action@main
        with:
          extra-conf: |
            extra-substituters = "https://cache.nixos.org" "https://nixpkgs-wayland.cachix.org" "https://nix-gaming.cachix.org"
            extra-trusted-public-keys = "cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY=" "nixpkgs-wayland.cachix.org-1:3lwxaILxMRkVhehr5StQprHdEo4IrE8sRho9R9HOLYA=" "nix-gaming.cachix.org-1:nbjlureqMbRAxR1gJ/f3hxemL9svXaZF/Ees8vCUUs4="

      - name: Install Cachix (if needed)
        run: nix profile install nixpkgs#cachix
        
      - name: Authenticate Cachix
        run: cachix authtoken ${{ secrets.CACHIX_AUTH_TOKEN }}

      - name: Disk Space Reclaimer
        uses: insightsengineering/disk-space-reclaimer@v1.1.0

      - name: Build and push redmi configuration
        run: |
          nix build .#nixosConfigurations.redmi.config.system.build.toplevel \
            --option sandbox false \
            --option warn-dirty false \
            --print-build-logs
          
          nix-store -qR --include-outputs $(readlink -f result) | sort -u > paths-to-push.txt
          cachix push ${{ env.CACHIX_NAME }} -j4 < paths-to-push.txt || echo "Some paths failed to push"
          
          rm -rf result paths-to-push.txt
          nix-collect-garbage --delete-old
          nix store gc

      - name: Intermediate cleanup
        run: |
          nix-collect-garbage --delete-old
          nix store gc
          df -h

      - name: Build and push dell configuration
        run: |
          nix build .#nixosConfigurations.dell.config.system.build.toplevel \
            --option sandbox false \
            --option warn-dirty false \
            --print-build-logs
          
          nix-store -qR --include-outputs $(readlink -f result) | sort -u > paths-to-push.txt
          cachix push ${{ env.CACHIX_NAME }} -j4 < paths-to-push.txt || echo "Some paths failed to push"
          
          rm -rf result paths-to-push.txt
          nix-collect-garbage --delete-old
          nix store gc
          df -h
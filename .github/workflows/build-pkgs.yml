name: ci

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

env:
  flake: github:${{ github.repository }}/${{ github.sha }}
  nix-conf: |-
    accept-flake-config = true
    always-allow-substitutes = true
    builders-use-substitutes = true
    max-jobs = 1

jobs:
  flake-check:
    runs-on: ubuntu-latest
    steps:
      - uses: DeterminateSystems/nix-installer-action@v16
        with:
          extra-conf: ${{ env.nix-conf }}
      - uses: cachix/cachix-action@v16
        if: ${{ secrets.CACHIX_SIGNING_KEY }}
        with:
          name: pkgss
          signingKey: ${{ secrets.CACHIX_SIGNING_KEY }}
          extraPullNames: nix-community
      - name: nix-flake-check
        run: nix flake check '${{ env.flake }}'

  flake-show:
    runs-on: ubuntu-latest
    steps:
      - uses: DeterminateSystems/nix-installer-action@v16
        with:
          extra-conf: ${{ env.nix-conf }}
      - uses: cachix/cachix-action@v16
        if: ${{ secrets.CACHIX_SIGNING_KEY }}
        with:
          name: pkgss
          signingKey: ${{ secrets.CACHIX_SIGNING_KEY }}
          extraPullNames: nix-community
      - name: nix-flake-show
        run: nix flake show '${{ env.flake }}' --option allow-import-from-derivation true

  build:
    name: build ${{ matrix.attr }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        attr:
          - packages.x86_64-linux.default
          - devShells.x86_64-linux.default
    steps:
      - uses: DeterminateSystems/nix-installer-action@v16
        with:
          extra-conf: ${{ env.nix-conf }}
      - uses: cachix/cachix-action@v16
        if: ${{ secrets.CACHIX_SIGNING_KEY }}
        with:
          name: pkgss
          signingKey: ${{ secrets.CACHIX_SIGNING_KEY }}
          extraPullNames: nix-community
      - name: Build package
        run: nix build '${{ env.flake }}#${matrix.attr}'

  check:
    runs-on: ubuntu-latest
    needs: [flake-check, flake-show, build]
    if: always()
    steps:
      - uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}